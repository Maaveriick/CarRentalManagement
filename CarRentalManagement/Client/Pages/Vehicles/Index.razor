@page "/vehicles/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3>class = "card-title"> Car Vehicles</h3>
@if (Vehicles == null)
{
    <div class="alert alert-info">Loading Makes...</div>
}
else
{
    <table class="table table-responsive">
        <thread>
            <tr>
                <th>Make</th>
                <th>Model</th>
                <th>Year</th>
                <th>License Plate Number</th>
                <th>Actions</th>
            </tr>
        </thread>
        <tbody>
            @foreach (var vehicle in Vehicles)
            {
                <tr>
                    <td>@vehicle.Make.Name</td>
                    <td>@vehicle.Model.Name</td>
                    <td>@vehicle.Year</td>
                    <td>@vehicle.LicensePlateNumber
                        <a href="vehicles/view/@vehicle.Id" class=" btn btn-primary">
                            <span class="oi oi-book"></span>
                        </a>
                        <a href="/vehicles/edit/@vehicle.Id" class="btn btn-warning">
                            <span class=" oi oi-pencil">
                            </span>
                        </a>
                        <button class=" btn btn-danger" @onclick="@(()=>Delete(vehicle.Id))">
                            <span class="oi oi-delete">
                            </span>
                        </button>

                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private List<Vehicle>? Vehicles;

    protected async override Task OnInitializedAsync()
    {
        Vehicles = await _client.GetFromJsonAsync<List<Vehicle>>($"{Endpoints.VehiclesEndPoint}");
    }

    async Task Delete(int vehicleId)
    {
        if (Vehicles != null)
        {
            var vehicle = Vehicles.First(q => q.Id == vehicleId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {vehicle.Make.Name}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.VehiclesEndPoint}/{vehicleId}");
                await OnInitializedAsync();
            }
        }
    }
}
